/** @page TIM1_6Steps Six-step PWM signal generation using TIM1

  @par Example description

  This example shows how to configure the TIM1 peripheral to generate 6 Steps.
  The TIM1 peripheral offers the possibility to program in advance the 
  configuration for the next TIM1 outputs behaviour (step) and change the
  configuration of all the channels at the same time. This operation is possible
  when the COM(commutation) event is used.
  
  The COM event can be generated by software by setting the COM bit in the TIM1_EGR
  register or by hardware (on TRC rising edge).
  In this example, a software COM event is generated each 180 ms: using the TIM4
  Update interrupt.
  The TIM1 is configured in Timing Mode, each time a COM event occurs, a new TIM1
  configuration will be set in advance.


The following Table describes the TIM1 Channels states:

 @code
              ***********************************************
             | Step1 | Step2 | Step3 | Step4 | Step5 | Step6|
   **********************************************************
  |Channel1  |   1   |   0   |   0   |   0   |   0   |   1  |
   **********************************************************
  |Channel1N |   0   |   0   |   1   |   1   |   0   |   0  |
   **********************************************************
  |Channel2  |   0   |   0   |   0   |   1   |   1   |   0  |
   **********************************************************
  |Channel2N |   1   |   1   |   0   |   0   |   0   |   0  |
   **********************************************************
  |Channel3  |   0   |   1   |   1   |   0   |   0   |   0  |
   **********************************************************
  |Channel3N |   0   |   0   |   0   |   0   |   1   |   1  |
   **********************************************************
 @endcode   
   

  The TIM1 waveform can be displayed using an oscilloscope.


  @par Directory contents

  - TIM1\TIM1_6Steps\main.c                    Main file containing the "main" function
  - TIM1\TIM1_6Steps\stm8s_conf.h              Library Configuration file
  - TIM1\TIM1_6Steps\stm8s_it.c                Interrupt routines source 
  - TIM1\TIM1_6Steps\stm8s_it.h                Interrupt routines declaration
  - TIM1\TIM1_6Steps\stm8_interrupt_vector.c   Interrupt vectors table


  @par Hardware and Software environment

  - This example runs on STM8S208, STM8S207, STM8S105 and STM8S103 devices.
  
  - This example has been tested with STMicroelectronics STM8/128-EVAL evaluation
    board (STM8S208) and ST Visual Develop (STVD) toolchain (Cosmic compiler).
    And can be easily tailored to any other supported device and development board.

  - Connect TIM1 pins to an oscilloscope as follows:
     - TIM1_CH1  pin (PC.1)  
     - TIM1_CH1N pin (PH.7)  
     - TIM1_CH2  pin (PC.2)  
     - TIM1_CH2N pin (PH.6)  
     - TIM1_CH3  pin (PC.3)  
     - TIM1_CH3N pin (PH.5)


  @par How to use it ?

  In order to make the program work, you must do the following :
  - Create a project and setup all project configuration
  - Add the required Library files :
    - stm8s_tim1.c
    - stm8s_tim4.c	
    - stm8s_gpio.c
  - Edit stm8s.h file to select the device you are working on (#define STM8S208, in this case).
  
  @b Tip: You can tailor the provided project template to run this example, for more
          details please refer to "stm8s_fwlib_um.chm" user manual; select "Peripheral Examples"
          then follow the instructions provided in "How to proceed" section.   
  - Rebuild all files: Build-> Rebuild all. 
  - Load project image: Debug->Start Debugging
  - Run program: Debug->Run (Ctrl+F5)
  - Connect the TIM1 pins to an oscilloscope 
  
  */

/******************* (C) COPYRIGHT 2009 STMicroelectronics *****END OF FILE****/
